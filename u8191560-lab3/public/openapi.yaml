openapi: 3.0.0
info:
  version: 1.0.0
  title: Issuing an order in the store
  license:
    name: MIT
paths:
  /buyers:
    get:
      summary: List all buyers
      operationId: listBuyers
      tags:
        - buyers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Buyers'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Add new buyer
      operationId: addBuyer
      tags:
        - buyers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Buyer'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Buyer'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /buyers/{buyer_id}:
    get:
      summary: Get buyer by id
      operationId: showBuyerById
      tags:
        - buyers
      parameters:
        - name: buyerId
          in: path
          required: true
          description: The id of the buyer who placed the order
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Buyer'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Replace buyer by id
      operationId: replaceBuyer
      tags:
        - buyers
      parameters:
        - name: buyerId
          in: path
          required: true
          schema:
            type: integer
        - name: buyer
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Buyer'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Buyer'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      summary: Patch buyer by id
      operationId: patchBuyer
      tags:
        - buyers
      parameters:
        - name: buyer_id
          in: path
          required: true
          schema:
            type: integer
        - name: name
          in: query
          required: false
          schema:
            type: string
        - name: lastname
          in: query
          required: false
          schema:
            type: string
        - name: phone 
          in: query
          required: false
          schema:
            type: string
        - name: street
          in: query
          required: false
          schema:
            type: string
        - name: city
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Buyer'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete buyer by id
      operationId: deleteBuyer
      tags:
        - buyers
      parameters:
        - name: buyer_id 
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Buyer'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /items:
    get:
      summary: List all items
      operationId: listItems
      tags:
        - items
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Items'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Add new item
      operationId: addItem
      tags:
        - items
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /items/{item_id}:
    get:
      summary: Get item by id
      operationId: showItemById
      tags:
        - items
      parameters:
        - name: itemId
          in: path
          required: true
          description: The id of the item that was ordered through the store
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Replace item by id
      operationId: replaceItem
      tags:
        - item
      parameters:
        - name: itemId
          in: path
          required: true
          schema:
            type: integer
        - name: item
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Item'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      summary: Patch item by id
      operationId: patchItem
      tags:
        - items
      parameters:
        - name: item_id
          in: path
          required: true
          schema:
            type: integer
        - name: type
          in: query
          required: false
          schema:
            type: string
        - name: name
          in: query
          required: false
          schema:
            type: string
        - name: description 
          in: query
          required: false
          schema:
            type: string
        - name: cost 
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete item by id
      operationId: deleteItem
      tags:
        - items
      parameters:
        - name: item_id 
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /shops:
    get:
      summary: List all shops
      operationId: listShops
      tags:
        - shops
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shops'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Add new shop
      operationId: addShop
      tags:
        - shops
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Shop'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shop'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /shops/{shop_id}:
    get:
      summary: Get shop by id
      operationId: showShopById
      tags:
        - shops
      parameters:
        - name: shopId
          in: path
          required: true
          description: The id of the store that sells products to buyers
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shop'       
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Replace shop by id
      operationId: replaceShop
      tags:
        - shops
      parameters:
        - name: shopId
          in: path
          required: true
          schema:
            type: integer
        - name: shop
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Shop'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shop'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      summary: Patch shop by id
      operationId: patchShop
      tags:
        - shops
      parameters:
        - name: shop_id
          in: path
          required: true
          schema:
            type: integer
        - name: city
          in: query
          required: false
          schema:
            type: string
        - name: address_name
          in: query
          required: false
          schema:
            type: string
        - name: city 
          in: query
          required: false
          schema:
            type: string
        - name: street 
          in: query
          required: false
          schema:
            type: string
        - name: house 
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: floor 
          in: query
          required: false
          schema:
            type: integer
            format: int64    
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shop'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete shop by id
      operationId: deleteShop
      tags:
        - shops
      parameters:
        - name: shop_id 
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shop'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /orders:
    get:
      summary: List all orders
      operationId: listOrders
      tags:
        - orders
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Orders'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Add new order
      operationId: addOrder
      tags:
        - orders
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /orders/{order_id}:
    get:
      summary: Get order by id
      operationId: showOrderById
      tags:
        - orders
      parameters:
        - name: orderId
          in: path
          required: true
          description: The id of the order that the buyer places in the shop for a specific item
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Replace order by id
      operationId: replaceOrder
      tags:
        - orders
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: integer
        - name: order
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Order'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      summary: Patch order by id
      operationId: patchOrder
      tags:
        - orders
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: integer
        - name: shop_id
          in: query
          required: true
          schema:
            type: integer
        - name: buyer_id
          in: query
          required: true
          schema:
            type: integer
        - name: item_id 
          in: query
          required: true
          schema:
            type: integer
        - name: quanity 
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: order_discount 
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: packaging_date 
          in: query
          required: false
          schema:
            type: string
            format: date 
        - name: arrival_date 
          in: query
          required: false
          schema:
            type: string
            format: date        
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete order by id
      operationId: deleteOrder
      tags:
        - orders
      parameters:
        - name: order_id 
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Buyer:
      type: object
      required:
        - id
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        lastname:
          type: string
        phone:
          type: string
        street:
          type: string
        city:
          type: string
    Buyers:
      type: array
      items:
        $ref: "#/components/schemas/Buyer"
    Item:
      type: object
      required:
        - id
      properties:
        id:
          type: integer
          format: int64
        type:
          type: string
        name:
          type: string
        description:
          type: string
        cost:
          type: integer
          format: int64
    Items:
      type: array
      items:
        $ref: "#/components/schemas/Item"
    Shop:
      type: object
      required:
        - id
      properties:
        id:
          type: integer
          format: int64
        city:
          type: string
        address_name:
          type: string
        city:
          type: string
        street:
          type: string
        house:
          type: integer
          format: int64
        floor:
          type: integer
          format: int64
    Shops:
      type: array
      items:
        $ref: "#/components/schemas/Item"
    Order:
      type: object
      required:
        - id
        - shop_id
        - buyer_id
        - item_id
      properties:
        id:
          type: integer
          format: int64
        shop_id:
          type: integer
          format: int64
        buyer_id:
          type: integer
          format: int64
        item_id:
          type: integer
          format: int64
        quanity:
          type: integer
          format: int64
        order_discount:
          type: integer
          format: int64
        packaging_date:
          type: string
          format: date
        arrival_date:
          type: string
          format: date
    Orders:
      type: array
      items:
        $ref: "#/components/schemas/Order"   
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          $ref: '#/components/schemas/Code'
        message:
          type: string
        meta:
          type: object
    Code:
      type: string
      enum:
        - '200'
        - '201'
        - '400'
        - '404'
